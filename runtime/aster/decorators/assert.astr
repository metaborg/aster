/**
 * Assertion decorators.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module aster/decorators/assert

imports
  libstratego-lib
  aster/decorators/common

decorators

  decorator assert-input(a, condition) =
    id.assert-input(a, condition |"Assertion failed")

  decorator assert-input(a, condition |message) =
    if not(condition) then
      log(|Critical(), [message, " at attribute ", a.attribute-name, " for: "], id.path);
      print-stacktrace;
      <exit> 1 
    end;
    a

  decorator assert-output(a, condition) =
    id.assert-output(a, condition |"Assertion failed")

  decorator input.assert-output(a, condition |message) =
    a;
    if not(condition) then
      prim("SSL_stacktrace_get_all_frame_names") => trace;
      log(|Critical(), [message, " at attribute ", a.attribute-name, " for ", input.path, ":"], id.uninit);
      <report-failure> trace
    end

  /*
  decorator input.assert-after(a, condition) =
    id.assert-after(a, condition |"Assertion failed")

  decorator input.assert-after(a, condition |message) =
    a;
    id.set-cached-for(a|input);
    if not(<condition> input) then
      prim("SSL_stacktrace_get_all_frame_names") => trace;
      log(|Critical(), [message, " at attribute ", a.attribute-name, " for ", input.path, ":"], id.uninit);
      <report-failure> trace
    end;
    id.set-uncached-for(a|input)
  */
  
  /**
   * Terminate with a fatal error if the decorated attribute results in a hard failure.
   */
  decorator fail-fatal(a) =
    id.assert-input(a, a.defined |"No attribute equation matches for input")
