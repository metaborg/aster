/**
 * Debugging attributes.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module aster/attributes/debug

imports
  libstratego-lib
  aster/decorators/common
  aster/decorators/flow

attributes // Attribute initialization warnings

  def plain disable-warnings enable-warnings =
    rules(AsterWarningsDisabled :- _)
  
  def plain disable-warnings disable-warnings =
    rules(AsterWarningsDisabled: _)

attributes // Debugging messages and strings

  def plain disable-warnings debug =
    where(aster-remove-annos; debug)
  
  def plain disable-warnings debug(m) =
    where(aster-remove-annos; debug(m))
  
  def path =
    id.path-list;
    reverse;
    map(get-constructor; as-string);
    separate-by(|".");
    concat-strings
  
  def path-and-node =
    where(node := <to-tiny-string>);
    id.path;
    (?"" < !node + <conc-strings> (<id>, ".", node));
    string-as-chars(
      truncate-path-lists;
      if <gt> (<string-length>, 60) then
        reverse;
        take(|60);
        reverse;
        !['.', '.', '.' | <id>]
      end
    )
  
  def plain path-list =
    id.parent;
    ![ id | id.path-list]
  <+
    ![]

attributes
  
  // Avoid loops in traces
  def disable-trace path
  def disable-trace path-list
  def disable-trace path-and-node
