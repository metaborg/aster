module binary-numbers

signature constructors

  Number : List * List -> Number
  List   : List * Int  -> List
  List   : Int         -> List

strategies
  
  main-binary-numbers =
    option-wrap(
      verbose-option
    ,
      !Number(List(List(List(1), 0), 1), List(List(0), 1));
      
      id.init.value;
      
      where(<lt> (<id>, 5.3));
      where(<gt> (<id>, 5.2));
      
      id.uninit
    )

  pow =
    Swap;
    copy;
    foldr(!1, mul)
  <+
    <copy> (<subt> (0, <Snd>), <Fst>);
    foldr(!1.0, Swap; div)

rules // Attributes

  syn value: // "with add"
    0              -> 0
    1              -> <pow> (2, id.scale)
    List(l, v)     -> <add> (l.value, v.value)
    Number(l1, l2) -> <add> (l1.value, l2.value)

  inh scale:
    Number(t, _).t -> 0
    Number(_, t).t -> <subt> (0, t.length)
    List(l, _).l   -> <inc> id.scale

  syn length:
    List(_)    -> 1
    List(l, _) -> <inc> l.length

