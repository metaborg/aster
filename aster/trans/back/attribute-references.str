module back/attribute-references

imports
  Stratego-Attributes
  stratego-rerag
  back/default-attributes
  back/rule-naming

rules // Evaluate attributes in AG context

  assimilate-expr-inside-ag(|sig, s_parent, s_parent-desired, x_node, x_all-parents, x_attr-cache) =
    assimilate-native-ref-inside-ag(|s_parent, x_all-parents, x_node, x_attr-cache)
  <+
    assimilate-native-ref
  <+
    ?AttributeRef(_, attr);
    assimilate-attr-ref-inside-ag(|s_parent, s_parent-desired, x_all-parents, x_node, x_attr-cache);
    try(
      assimilate-attr-self-ref-inside-ag(|sig, attr, s_parent, x_node)
    )
  
  assimilate-attr-ref-inside-ag(|s_parent, s_parent-desired, x_all-parents, x_node, x_attr-cache):
    AttributeRef(t, attr @ Attribute(name, s*, t*)) ->
    Strat |[ <s> t ]|
    where
      not(<is-decorator> attr)
    with
      x_eval         := <attribute-accessor-name> attr;
      x_rewrite-mode := <RewriteModeVar>;
      if "inh" := type then
        s := |[ x_eval(s* |<s_parent>,         x_all-parents, x_attr-cache, x_rewrite-mode, t*) ]|
      else
        // Pass current node as a parent, or pass UnknownParent
        s := |[ x_eval(s* |<s_parent-desired>, x_all-parents, x_attr-cache, x_rewrite-mode, t*) ]|
      end

  // TODO2: Optimize - don't redirect attribute self-references for child terms
  //       	e.g., syn Fork(t1, t2).min := <min> (t1.min, t2.min)

  /**
   * Redirect attribute self-references.
   *
   * (e.g., 'inh foo = id.foo' effectively becomes 'inh foo = id.parent.foo').
   */
  assimilate-attr-self-ref-inside-ag(|sig, attr, s_parent, x_node):
    |[ <s> t ]| ->
    |[ <?x_node < s_eval-default + s> t ]|
    where
      <attribute-signature> attr => sig
    with
      s_eval-default := <default-rule-call> attr

rules // Evaluate attributes outside of AG context

  // TODO2: Never eagerly get parent reference?

  assimilate-expr =
    assimilate-native-ref
  <+
    assimilate-attr-ref
  <+
    assimilate-decorator-ref

  // TODO2: Optimize - use local variables to cache all <attr-cache> and <all-parents> calls

  assimilate-attr-ref:
    AttributeRef(t, attr @ Attribute(name, s*, t*)) ->
    Strat |[
      !t;
      astr-initialize-node-ensure(
        astr-initialize-node-warning(|x_all-parents, ~str:name')
      | <all-parents => x_all-parents>
      , <attr-cache => x_attr-cache>
      );
      x_eval(s* |UnknownParent(), x_all-parents, x_attr-cache, <get-rewrite-mode(|x_attr-cache)>, t*)
    ]|
    where
      not(<is-decorator> attr)
    with
      x_eval         := <attribute-accessor-name> attr;
      x_all-parents  := <AllParentsVar>;
      x_attr-cache   := <AttrCacheVar>;
      name'          := name
        
      
