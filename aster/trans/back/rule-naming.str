module back/rule-naming

imports
  Stratego-Attributes
  front/analyze
  back/util

strategies

  // TODO: Cleanup

  /*
  attribute-type-name(|local-type) =
    if NoType() := local-type then
      get-attribute-decorators // globally declared type
    else
      !local-type
    end;
    
    switch id
      case Inh():         !"inh"
      case Local():       !"local"
      case Decorated(id): !"decorated"
      otherwise:          !"syn"
    end
  */

  attribute-accessor-name =
    attribute-accessor-name(|<get-attribute-decorators; decorators-to-string>)

  /** @type List(Decorator) -> String */
  decorators-to-string =
    map(?Decorator(<id>, _, _));
    separate-by(|"-");
    ([] <+ at-last(\[last] -> [last, "-"]\)); // add trailing -
    concat-strings => decorators

  attribute-accessor-name(|type) =
    attribute-signature => Attribute(name, _, _);
    accessor := <conc-strings> ("eval-", type, name);
    rules(
      UndoAccessorName: accessor -> name
    )

  /*
  preferred-attribute-accessor-type =
    attribute-type-name(|NoType())
  */
