module aster

imports
  libstratego-lib

  front/analyze
  back/assimilate
  front/check
  front/desugar
  aster/runtime/debug
  io
  lib/xtc-multi-options

signature constructors

  Trace : OptionKey

strategies

  // TODO: Add switch for run-time checks, e.g., for circularity and tree concistency
  
  aster =
    init-shared-vars;
    one(add-default-attributes);
    desugar-all;
    
    // init-check; // TODO: init-check, if working w/ dyn. rules...?
    all-stratego-defs(try(analyze));
    where(check-all);
    assimilate-all

strategies
 
  init-shared-vars =
    // TODO2: Things like <all-parents> should be optimized in a post-processing stage, not right away
    // TODO2: Rename attr-cache to cache or store, or something
    rules(
      ParentVar         := <newname> "parent"
      NodeVar           := <newname> "node"
      AllParentsVar     := <newname> "all-parents"
      AttrCacheVar      := <newname> "attr-cache"
      RewriteModeVar    := <newname> "rewrite-mode"
      RootVar           := <newname> "root"
      CachedVar         := <newname> "cached"
      DecoratedValueVar := <newname> "decorated-value"
    )

strategies // I/O

  main-aster =
    xtc-multi-io-wrap(
      aster-options
    ,
      map(input-stratego-file <+ <xtc-exit> 1);
      aster;
      map(output-stratego-file)
    )
  
  aster-options =
    Option(
      "--trace"
    , <set-config> (Trace(), <id>)
    , !"--trace          Enable tracing messages (for debugging support)"
    )
