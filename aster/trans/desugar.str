module desugar

imports
  Stratego-Attributes
  stratego-rerag

rules

  desugar-all =
    topdown(repeat(
      desugar-attribute-ref + desugar-attribute-def + desugar-rewrite-def
    + desugar-where-with
    ));
    all-stratego-defs(try(
      astr-flatten-block-def
    ))

  desugar-attribute-def:
    Attributes(def*) -> Rules(def*)

  desugar-attribute-def:
    AttributePDefTermNoWhere(child, attribute, term) ->
    AttributePDefTerm(child, attribute, term, Id())
     
  desugar-attribute-def:
    AttributePDefTerm(child, attribute, term, condition) ->
    AttributePDefStrategy(child, attribute, strategy)
    where strategy := Seq(condition, Build(term))
  
  desugar-attribute-def:
    AttributeDefTermNoWhere(child, attribute, term) ->
    AttributeDefTerm(child, attribute, term, Id())
  
  desugar-attribute-def:
    AttributeDefTerm(child, attribute, term, condition) ->
    AttributeDefStrategy(child, attribute, strategy)
    where strategy := Seq(condition, Build(term))
  
  // HACK: WhereClause is made a strategy in the core syntax
  
  desugar-where-with:
    Seq(WithClause(s1), s2) -> |[ s1; s2 ]|
  
  desugar-where-with:
    Seq(WhereWithClause(s1, s2), s3) -> Seq(WhereClause(s1), Seq(s2, s3))
  
// UNDONE: Attribute declaration
//
//desugar-attribute-def:
//  AttributeDef(type, pattern, AttributeDefNoValue(_, attribute)) ->
//  AttributeDef(type, RootApp(Fail()), AttributeDefStrategy(None(), attribute, Fail()))
  
  desugar-attribute-def:
    AttributeDefNoPattern(type, value) ->
    AttributeDef(type, Wld(), value)
     
  desugar-rewrite-def:
    AnonymousRewriteRuleNoWhere(term1, term2) ->
    AnonymousRewriteRule(term1, term2, Id())
  
  desugar-rewrite-def:
    AnonymousRewriteRule(term1, term2, condition) ->
    AnonymousRewriteStrategy(Seq(Match(term1), Seq(Where(condition), Build(term2))))
  
  desugar-rewrite-def:
    BlockAnonymousRewriteRuleNoWhere(term) ->
    BlockAnonymousRewriteRule(term, Id())

  desugar-rewrite-def:
    BlockAnonymousRewriteRule(term, condition) ->
    BlockAnonymousRewriteStrategy(Seq(Where(condition), Build(term)))
  
  desugar-attribute-ref:
    AttributeRefSelf(attribute) ->
    AttributeRef(RootApp(Id()), attribute)

  desugar-attribute-ref:
    AttributeNoArgs(x) -> Attribute(x, [])
  
  desugar-attribute-ref:
    AttributeTerm(x) -> RootApp(x)
  
  desugar-attribute-ref:
    DotChild(x) -> Child(x)
     
rules // flatten block definitions to individual definitions

  astr-flatten-block-def =
    ?NameDefBlock(pattern, <id>);
    map(
      \AttributeTypedDef(type, AttributeDefStrategy(_, _, _)) ->
       AttributeDef(type, pattern, <id>)\
    )

  astr-flatten-block-def =
    ?PatternDefBlock(type, attribute, <id>);
    map(
      \AttributePDefStrategy(pattern, child, s) ->
       AttributeDef(type, pattern, AttributeDefStrategy(child, attribute, s))\
    )
  