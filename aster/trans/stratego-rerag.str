module stratego-rerag

imports
  libstratego-lib
  libstratego-sglr
  libstratego-xtc

  analyze
  assimilate
  check
  desugar

strategies

  stratego-rerag =
    desugar-all;
    
    {| AttributeType:
      all-stratego-defs(try(analyze));
      check-all;      
      assimilate-all
    |}
  
  all-stratego-defs(s) =
    Module(id, map(all(map(s); flatten-list <+ debug(!"uh oh"); fail)))

strategies // I/O

  main-stratego-rerag =
    xtc-io-wrap(
      input-stratego-file;
      stratego-rerag;
      output-stratego-file
    <+
      prim("SSL_stacktrace_get_all_frame_names");
      report-failure;
      
      xtc-exit
    )
  
  input-stratego-file =
    parse-xtc-file-report-errors(|<parse-table-stratego-attributes>, "Module")

  output-stratego-file =
    write-to;
    xtc-transform(!"pp-stratego", !["--abstract" | <pass-verbose>])
  <+
    pp-format-checker-error(|"Internal error: generated AST is malformed", "Stratego-Sugar.rtg")

   pp-format-checker-error(|msg, rtg) =
      err-msg(|msg)
    ; write-to => FILE(file)
    ; try(<xtc-command(!"format-check")> ["--vis", "-i", file, "--rtg", <xtc-find> rtg])
    ; log(|Critical(), "Fatal errors encountered in generated code")
    ; <xtc-exit> 1
  
  parse-table-stratego-attributes =
    CachedParseTableStrategoAttributes
  <+
    table := <open-parse-table> <import-term(Stratego-Attributes.tbl)>;
    rules(CachedParseTableStrategoAttributes := table)
