/**
 * Built-in decorators (defined internally).
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module aster/decorators/lang

decorators // Internally defined marker decorators
  
  /**
   * Plain attributes do not have the default behavior of
   * caching and re-annotating a result term for re-attribution
   * (as defined by the 'cached' decorator).
   */
  decorator plain plain(a) =
    a

  /**
   * Indicates that an attribute can be used
   * on uninitialized terms, and that no warnings
   * should be displayed about this.
   */
  decorator disable-trace disable-warnings disable-warnings(a) =
    a
  
  /**
   * Indicates that an attribute should not be included in tracing messages.
   *
   * @note This should be used sparingly, e.g. to prevent loops or
   *       to hide trivial tree access attributes.
   */
  decorator disable-trace disable-trace(a) =
    a

  /**
   * Alters the signature of an attribute. For example,
   * may be used in combination with customized caching.
   */
  decorator alter-signature(alter) alter-signature(a, alter) =
    a

decorators // Derived decorators

  /**
   * Marks an attribute as context-free. Context-free attributes may
   * be evaluated and cached without regard to the particular location
   * of the node in the tree. For example, a node A in Fork(A, A) is
   * considered identical in this respect.
   *
   * This decorator might be applied to an attribute of the form:
   *
   *   def String context-free rename:
   *     name -> <newname> <conc-strings> (name, "_renamed")
   *
   * This attribute would rename strings in the tree, giving the same
   * name to identical strings regardless of their position in the tree.
   *
   * @note context-free attributes cannot use the 'parent' attribute; if this
   *       is used directly or indirectly, a compile-time error is reported.
   */
  decorator disable-warnings alter-signature(Attribute(id, id, map(id.uninit))) context-free(a) =
    id.uninit;
    a

  /**
   * Marks a the term arguments of an attribute as context-free.
   *
   * This decorator might be applied to an attribute of the form:
   *
   *   def context-free-args lookup-global lookup-by-name(|name):
   *     Decl(x, y) -> y
   */
  decorator disable-warnings alter-signature(Attribute(id, id, map(id.uninit))) context-free-args(a) =
    a
