/**
 * Circular attribute evaluation run-time.
 * Uses the attribute cache table to store a worklist.
 *
 * @internal
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module circular

imports
  libstratego-lib

strategies
  
  get-circular-worklist(|attr-cache) =
    !attr-cache;
    hashtable-get(|"$worklist")
  
  set-circular-worklist(|attr-cache, value) =
    where(
      !attr-cache;
      hashtable-put(|"$worklist", value)
    )
  
  circular-worklist-enqueue(|attr-cache) =
    where(
      queue := <get-circular-worklist(|attr-cache)>
    <+
      queue := []
    );
    set-circular-worklist(|attr-cache, [<id> | queue])
  
  circular-worklist-dequeue(|attr-cache) =
    where(
      get-circular-worklist(|attr-cache);
      (queue, ticket) := <split-last>
    );
    set-circular-worklist(|attr-cache, queue);
    !ticket

strategies

  circular-attributes-fixpoint(|attr-cache) =
    not(IsExecutingFixpoint);
    rules(IsExecutingFixpoint: _);
    
    with(
      while(
        circular-worklist-dequeue(|attr-cache)
      , once-EvalCircularAttribute
      )
    );
    
    rules(IsExecutingFixPoint :- _)
  
  internal-circular-rule-def =
    ?ticket;
    rules(EvalCircularAttribute: ticket) // ensure this is always defined somewhere
