/**
 * This tests an optimization where signature of an attribute
 * should only be constructed if it is actually used.
 *
 * Note that this makes use of side-effects in the signature,
 * so the attributes can tell if they're being watched.
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module signature-evaluation

strategies

  main-signature-evaluation =
    !1.init;
    id.uncached-1.debug;
    id.uncached-2.debug;
    id.uncached-3.debug;
    id.self-reflecting.debug;
    id.decorator-reflecting.debug
    
  die = fatal-err(|"Signature evaluated")
  
attributes

  def alter-signature(die) uncached-1 :=
    id // this never gets cached
  
  def alter-signature(die) uncached uncached-2 := 
    2 // signature not used in here; not evaluated

  def alter-signature(die) down uncached uncached-3 := 
    3 // signature not used in here; not evaluated
  
  def alter-signature(rules(BeenHere := 4)) self-reflecting =
    id.signature;
    BeenHere
  
  def plain Int alter-signature(rules(BeenHere2 := 5)) decorator-reflecting =
    BeenHere2
